@model Click4Trip.ViewModel.CarRentViewVM

@{
    ViewBag.Title = "Search Results";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="~/CSS/NewIndex/demo.css" />
    <link rel="stylesheet" type="text/css" href="~/CSS/SearchResults.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <title>Search Results</title>

</head>

<body>

    <div class="container" id="myContainer" style="background-image: url('https://i.imgur.com/q08fKYG.jpg');">
        @* https://i.imgur.com/fG7xslP.jpg    https://i.imgur.com/q08fKYG.jpg*@
        <div style="background-color: rgba(0, 0, 0, 0.5); margin-left:auto; margin-right:auto; margin-top:30px; width:82%; padding-left:20px; padding-top:20px; padding-bottom:20px; padding-right:20px;">
            <div style="color:white; font-weight:bold; font-size:28px;">@Model.Country, @Model.City</div>
            <br />
            <div style="color:white; font-weight:bold; font-size:20px;">@Model.PickupDate - @Model.DropoffDate</div>
            <div style="color:white; font-weight:bold; font-size:20px;">(@Model.days Days)</div>
        </div>
    </div>

    <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />

    @if (Model.results.Count == 0)
    {
        <h3>No matches!</h3>
    }
    else
    {
        <div class="row">
            <div class="l-sidebar col-md-3 col-md-right-0 col-md-right-0 padd-large-left margin-0-bottom" data-mcs-theme="wide">
                <div style="height:28px;"></div>
                <div class="text-center" style="background-color:white;">
                    <br />
                    <div id="map" style="height: 250px; width: 90%; margin:auto;"></div>
                    <br /><br />
                    <label>Sort by Price:</label>
                    <div class="list-inline">
                        <button class="button" onclick="sortTableNum('asc')">Low-High</button>
                        <button class="button" onclick="sortTableNum('desc')" style="margin-left:25px;">High-Low</button>
                    </div>

                    <br /><br />
                    <label>Filter by Category:</label>
                    <div style="display:grid; grid-template-columns: 50% 50%;">
                        <div style="grid-column: 1; grid-row: 1;">
                            <label class="containerr">
                                <font size="2">Compact</font>
                                <input type="checkbox" id="Compact" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                        <div style="grid-column: 2; grid-row: 1;">
                            <label class="containerr">
                                <font size="2">Economy</font>
                                <input type="checkbox" id="Economy" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>

                        <div style="grid-column: 1; grid-row: 2;">
                            <label class="containerr">
                                <font size="2">Fullsize</font>
                                <input type="checkbox" id="Fullsize" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                        <div style="grid-column: 2; grid-row: 2;">
                            <label class="containerr">
                                <font size="2">Intermediate</font>
                                <input type="checkbox" id="Intermediate" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>

                        <div style="grid-column: 1; grid-row: 3;">
                            <label class="containerr">
                                <font size="2">Luxury</font>
                                <input type="checkbox" id="Luxury" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                        <div style="grid-column: 2; grid-row: 3;">
                            <label class="containerr">
                                <font size="2">Mini</font>
                                <input type="checkbox" id="Mini" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>

                        <div style="grid-column: 1; grid-row: 4;">
                            <label class="containerr">
                                <font size="2">Premium</font>
                                <input type="checkbox" id="Premium" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                        <div style="grid-column: 2; grid-row: 4;">
                            <label class="containerr">
                                <font size="2">Special</font>
                                <input type="checkbox" id="Special" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>

                        <div style="grid-column: 1; grid-row: 5;">
                            <label class="containerr">
                                <font size="2">Standard</font>
                                <input type="checkbox" id="Standard" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                    </div>
                    
                    <br /><br />

                    <label>Filter by Type:</label>
                    <div style="display:grid; grid-template-columns: 50% 50%;">
                        <div style="grid-column: 1; grid-row: 1;">
                            <label class="containerr">
                                <font size="2">2-3 Door</font>
                                <input type="checkbox" id="Door2_3" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                        <div style="grid-column: 2; grid-row: 1;">
                            <label class="containerr">
                                <font size="2">2/4 Door</font>
                                <input type="checkbox" id="Door2_4" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>

                        <div style="grid-column: 1; grid-row: 2;">
                            <label class="containerr">
                                <font size="2">4-5 Door</font>
                                <input type="checkbox" id="Door4_5" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                        <div style="grid-column: 2; grid-row: 2;">
                            <label class="containerr">
                                <font size="2">Monospace</font>
                                <input type="checkbox" id="Monospace" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>

                        <div style="grid-column: 1; grid-row: 3;">
                            <label class="containerr">
                                <font size="2">Coupe</font>
                                <input type="checkbox" id="Coupe" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                        <div style="grid-column: 2; grid-row: 3;">
                            <label class="containerr">
                                <font size="2">SUV</font>
                                <input type="checkbox" id="SUV" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>

                        <div style="grid-column: 1; grid-row: 4;">
                            <label class="containerr">
                                <font size="2">Wagon/Estate</font>
                                <input type="checkbox" id="Wagon_Estate" onchange="FilterType()">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                    </div>

                    <br /><br />

                    <label>Price Range:</label>
                    @{
                        double min = Model.results[0].car.estimated_total_amount;
                        double max = min;
                        for (int i = 1; i < Model.results.Count; ++i)
                        {
                            if (Model.results[i].car.estimated_total_amount < min)
                            {
                                min = Model.results[i].car.estimated_total_amount;
                            }
                            if (Model.results[i].car.estimated_total_amount > max)
                            {
                                max = Model.results[i].car.estimated_total_amount;
                            }
                        }
                     }

                    <div id="slidecontainer" style="padding-left:15px; padding-right:15px;">
                        <input type="range" min="@min" max="@max" value="@max" class="slider" id="myRange" onchange="filterTable()">
                        <p style="font-size:small; margin-top:-10px;"><span style="float:left;"> @min </span> <span id="demo" style="float:right;"></span></p>
                        <br />
                    </div>
                </div>
            </div>

            <div id="carsResultSection" class="col-md-9">
                <div style="color:black; font-size:14px; font-weight:500; padding-bottom:8px;"> @Model.results.Count Results Were Found</div>
                @for (int i = 0; i < Model.results.Count; ++i)
                {
                    <div class="carBoxParent">

                        <div class="carBox">
                            <div style="grid-column: 1; grid-row: 1;">
                                <a><img src="@Model.results[i].car.image_url" style="width:157px; height:105px; cursor:pointer; margin-top:7px;" onclick="submitForm(@i)" /></a>
                            </div>

                            <div style="grid-column: 2; grid-row: 1;">
                                <div style="margin-left:10px; margin-right:10px; font-size:20px; color:black;"> <i class="fas fa-car"></i> @Model.results[i].provider Provider </div>
                                <div style="margin-left:10px; margin-right:10px; font-size:16px; color:black;"> Acriss Code: @Model.results[i].car.acriss_code </div>
                                <br />
                                <div style="display: grid; grid-template-columns: 45% 45% 10%; position: relative;">
                                    <div style="grid-column: 1; grid-row: 1;">
                                        <div style="margin-left:10px; margin-right:10px; font-size:14px;"> <i class="fa fa-check-square-o" style="font-size:16px;color:green"></i> @Model.results[i].car.category </div>
                                    </div>

                                    <div style="grid-column: 2; grid-row: 1;">
                                        <div style="margin-left:10px; margin-right:10px; font-size:14px;"> <i class="fa fa-check-square-o" style="font-size:16px;color:green"></i> @Model.results[i].car.car_type </div>
                                    </div>
                                    <div style="grid-column: 3; grid-row: 1;">
                                        <div style="font-size:18px; color:black; float:right; bottom:40%; right:5%; position:absolute; padding-right: 5px;">$@Model.results[i].car.estimated_total_amount </div>

                                        <button class="myButton" id="button@(i)" onclick="submitForm(@i)" style="bottom:-25px;">Order</button>
                                        <small style="font-size:8px; color:dimgrey; position:absolute; bottom:-40px; right:5.5%;">price for adult</small>
                                    </div>
                                </div>
                                <br />
                                <div style="margin-left:10px; margin-right:10px; font-size:12px; color:black;"> Address: @Model.results[i].address </div>

                            </div>
                        </div>
                        <br /><br />
                    </div>
                }

            </div>
        </div>

        using (Html.BeginForm("ViewCarInfo", "CarRent", FormMethod.Post, new { id = "myForm" }))
        {
            <div style="display:none">
                @Html.HiddenFor(x => x.Country, new { value = Model.Country })
                @Html.HiddenFor(x => x.City, new { value = Model.City })

                @Html.HiddenFor(x => x.selectedCar, new { id = "selectedCar" })
                @Html.HiddenFor(x => x.days, new { value = Model.days })
                @Html.HiddenFor(x => x.DropoffDate, new { value = Model.DropoffDate })
                @Html.HiddenFor(x => x.LocationCodeCity, new { value = Model.LocationCodeCity })
                @Html.HiddenFor(x => x.PickupDate, new { value = Model.PickupDate })
                @for (int i = 0; i < Model.results.Count; ++i)
                {
                    @Html.HiddenFor(x => x.results[i].address, new { value = Model.results[i].address })
                    @Html.HiddenFor(x => x.results[i].branch_id, new { value = Model.results[i].branch_id })
                    @Html.HiddenFor(x => x.results[i].provider, new { value = Model.results[i].provider })
                    @Html.HiddenFor(x => x.results[i].latitude, new { value = Model.results[i].latitude })
                    @Html.HiddenFor(x => x.results[i].longitude, new { value = Model.results[i].longitude })
                    @Html.HiddenFor(x => x.results[i].car.acriss_code, new { value = Model.results[i].car.acriss_code })
                    @Html.HiddenFor(x => x.results[i].car.air_conditioning, new { value = Model.results[i].car.air_conditioning })
                    @Html.HiddenFor(x => x.results[i].car.amount, new { value = Model.results[i].car.amount })
                    @Html.HiddenFor(x => x.results[i].car.car_type, new { value = Model.results[i].car.car_type })
                    @Html.HiddenFor(x => x.results[i].car.category, new { value = Model.results[i].car.category })
                    @Html.HiddenFor(x => x.results[i].car.currency, new { value = Model.results[i].car.currency })
                    @Html.HiddenFor(x => x.results[i].car.estimated_total_amount, new { value = Model.results[i].car.estimated_total_amount })
                    @Html.HiddenFor(x => x.results[i].car.estimated_total_currency, new { value = Model.results[i].car.estimated_total_currency })
                    @Html.HiddenFor(x => x.results[i].car.fuel, new { value = Model.results[i].car.fuel })
                    @Html.HiddenFor(x => x.results[i].car.image_category, new { value = Model.results[i].car.image_category })
                    @Html.HiddenFor(x => x.results[i].car.image_height, new { value = Model.results[i].car.image_height })
                    @Html.HiddenFor(x => x.results[i].car.image_url, new { value = Model.results[i].car.image_url })
                    @Html.HiddenFor(x => x.results[i].car.image_width, new { value = Model.results[i].car.image_width })
                    @Html.HiddenFor(x => x.results[i].car.rate_type, new { value = Model.results[i].car.rate_type })
                    @Html.HiddenFor(x => x.results[i].car.transmission, new { value = Model.results[i].car.transmission })
                }
            </div>
        }
    }
    <script>

        EasterEgg();
        function EasterEgg() {
            if ("@Model.Country" == "Turkey") {
                document.getElementById("myContainer").style.backgroundImage = "url('https://i.imgur.com/fG7xslP.jpg')"; // dick pick
            }
        }

        var slider = document.getElementById("myRange");
        var output = document.getElementById("demo");
        output.innerHTML = slider.value;

        slider.oninput = function () {
            output.innerHTML = this.value;
        }

        function filterTable() {
            var input, filter, table, car, price, i;
            input = document.getElementById("myRange");
            filter = parseInt(input.value, 10);
            table = document.getElementById("carsResultSection");
            car = table.getElementsByClassName("carBoxParent"); // each car
            for (i = 0; i < car.length; i++) { // for each row (car)
                price = (car[i].children[0].children[1].children[3].children[2].children[0].innerHTML.toString()).substring(1);
                if (parseInt(price, 10) <= filter) { // take the price
                    car[i].style.display = ""; // show it
                } else {
                    car[i].style.display = "none"; // hide it
                }

            }
        }

        function FilterType() {
            var Door2_3 = document.getElementById("Door2_3").checked;
            var Door2_4 = document.getElementById("Door2_4").checked;
            var Door4_5 = document.getElementById("Door4_5").checked;
            var Monospace = document.getElementById("Monospace").checked;
            var Coupe = document.getElementById("Coupe").checked;
            var SUV = document.getElementById("SUV").checked;
            var Wagon_Estate = document.getElementById("Wagon_Estate").checked;
            var Compact = document.getElementById("Compact").checked;
            var Economy = document.getElementById("Economy").checked;
            var Fullsize = document.getElementById("Fullsize").checked;
            var Intermediate = document.getElementById("Intermediate").checked;
            var Luxury = document.getElementById("Luxury").checked;
            var Mini = document.getElementById("Mini").checked;
            var Premium = document.getElementById("Premium").checked;
            var Special = document.getElementById("Special").checked;
            var Standard = document.getElementById("Standard").checked;

            var table, row, car_type, car_category, car_price, i;

            table = document.getElementById("carsResultSection");
            row = table.getElementsByClassName("carBoxParent");

            // if nothing is checked - show all results
            if (!(Door2_3 || Door2_4 || Door4_5 || Monospace || Coupe || SUV || Wagon_Estate
                || Compact || Economy || Fullsize || Intermediate || Luxury || Mini || Premium || Special || Standard)) {
                for (i = 0; i < row.length; i++) {
                    row[i].style.display = "";
                }
                return;
            }

            // arr for car type
            var arr1 = [];
            if (Door2_3) {
                arr1.push("2-3 Door");
            }
            if (Door2_4) {
                arr1.push("2/4 Door");
            }
            if (Door4_5) {
                arr1.push("4-5 Door");
            }
            if (Monospace) {
                arr1.push("Monospace");
            }
            if (Coupe) {
                arr1.push("Coupe");
            }
            if (SUV) {
                arr1.push("SUV");
            }
            if (Wagon_Estate) {
                arr1.push("Wagon/Estate");
            }

            // arr for car category
            var arr2 = [];
            if (Compact) {
                arr2.push("Compact");
            }
            if (Economy) {
                arr2.push("Economy");
            }
            if (Fullsize) {
                arr2.push("Fullsize");
            }
            if (Intermediate) {
                arr2.push("Intermediate");
            }
            if (Luxury) {
                arr2.push("Luxury");
            }
            if (Mini) {
                arr2.push("Mini");
            }
            if (Premium) {
                arr2.push("Premium");
            }
            if (Special) {
                arr2.push("Special");
            }
            if (Standard) {
                arr2.push("Standard");
            }

            var input = document.getElementById("myRange");
            var filter = parseInt(input.value, 10);

            debugger
            for (i = 0; i < row.length; i++) { // for each car
                car_type = row[i].children[0].children[1].children[3].children[1].children[0].innerHTML.toString(); // type
                car_category = row[i].children[0].children[1].children[3].children[0].children[0].innerHTML.toString(); // category
                car_price = (row[i].children[0].children[1].children[3].children[2].children[0].innerHTML.toString()).substring(1); // price

                var j;
                var flag = 0;

                row[i].style.display = "none";

                for (j = 0; j < arr1.length; ++j) { // search if there any car type checked
                    if (car_type.includes(arr1[j])) {
                        flag = 1;
                        row[i].style.display = "";
                        break;
                    }
                }

                if (arr1.length == 0) { // if there are no car type checked at all
                    flag = 1;
                }

                for (j = 0; j < arr2.length; ++j) {
                    if (car_category.includes(arr2[j]) && flag == 1 && parseInt(car_price, 10) <= filter) {
                        row[i].style.display = "";
                        break;
                    }
                    else {
                        row[i].style.display = "none";
                    }
                }

            }
        }

        function sortTableNum(dir) {
            var table, rows, switching, i, x, y, shouldSwitch, switchcount = 0;
            table = document.getElementById("carsResultSection");
            switching = true;
            while (switching) {
                switching = false;
                rows = table.getElementsByClassName("carBoxParent"); // take all the rows (cars)
                for (i = 0; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    debugger
                    x = (rows[i].children[0].children[1].children[3].children[2].children[0].innerHTML.toString()).substring(1); // this car price
                    y = (rows[i + 1].children[0].children[1].children[3].children[2].children[0].innerHTML.toString()).substring(1); // the next car price

                    if (dir == "asc") {
                        if (parseInt(x, 10) > parseInt(y, 10)) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (parseInt(x, 10) < parseInt(y, 10)) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;
                }
            }
        }

        function submitForm(id) {
            document.getElementById("selectedCar").value = id;
            document.getElementById("myForm").submit();
        }

        function initMap() {
            var uluru = { lat:@Model.latitude , lng:@Model.longitude  };
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 11,
                center: uluru
            });
            var marker = new google.maps.Marker({
                position: uluru,
                map: map
            });
        }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=@Model.apiKey&callback=initMap">
    </script>
</body>
</html>